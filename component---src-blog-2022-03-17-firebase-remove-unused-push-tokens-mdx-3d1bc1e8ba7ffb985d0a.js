(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{"0q73":function(e,n,t){e.exports=t.p+"static/fake_token-68ef4710496d6b907c98da3e2e76d072.png"},"6qfE":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t("RSLW");Object.defineProperty(n,"MDXTag",{enumerable:!0,get:function(){return r(a).default}});var o=t("Fobl");function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"MDXProvider",{enumerable:!0,get:function(){return r(o).default}})},BdtC:function(e,n,t){"use strict";var a=t("q1tI"),o=t.n(a),r=t("qhky"),s=t("Wbzz");var i=function(e){var n=e.children,t=e.color,a=e.pageContext.header;return o.a.createElement(s.StaticQuery,{query:"3649515864",render:function(e){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.b,{title:e.site.siteMetadata.title},o.a.createElement("html",{lang:"en"})),o.a.createElement("div",{className:"blogpage"},o.a.createElement("a",{href:"/blog",smooth:!0,duration:1e3},"Back")),o.a.createElement("div",{className:"blogText"},o.a.createElement("h1",{title:a,color:t}),o.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0px 1.0875rem 1.45rem",paddingTop:0}},n,o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("p",null,"Questions? Suggestions? Compliments? Tips to make this post better? I'd love to hear your thoughts! ",o.a.createElement("a",{href:"https://twitter.com/overjeer"},"tweet to me")," on the ol' Twitter!"))))}})};n.a=function(e){return o.a.createElement(i,Object.assign({},e,{color:"#f9f9f9"}))}},Fobl:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.withMDXComponents=void 0;var a,o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r=t("q1tI"),s=(a=r)&&a.__esModule?a:{default:a};var i=s.default.createContext({}),c=i.Provider,l=i.Consumer;n.withMDXComponents=function(e){return function(n){return s.default.createElement(l,null,(function(t){return s.default.createElement(e,o({},n,{components:n.components||t}))}))}};n.default=function(e){return s.default.createElement(c,{value:e.components},e.children)}},RSLW:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a,o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),s=t("q1tI"),i=(a=s)&&a.__esModule?a:{default:a},c=t("Fobl");function l(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function m(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}var p={inlineCode:"code",wrapper:"div"},u=function(e){function n(){return l(this,n),m(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(n,e),r(n,[{key:"render",value:function(){var e=this.props,n=e.name,t=e.parentName,a=e.props,r=void 0===a?{}:a,s=e.children,c=e.components,l=void 0===c?{}:c,m=e.Layout,u=e.layoutProps,d=l[t+"."+n]||l[n]||p[n]||n;return m?i.default.createElement(m,o({components:l},u),i.default.createElement(d,r,s)):i.default.createElement(d,r,s)}}]),n}(s.Component);n.default=(0,c.withMDXComponents)(u)},SwdK:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return d}));var a=t("zLVn"),o=t("dI71"),r=t("q1tI"),s=t.n(r),i=t("6qfE"),c=t("0q73"),l=t.n(c),m=t("BdtC"),p=["components"],u={},d=function(e){function n(n){var t;return(t=e.call(this,n)||this).layout=m.a,t}return Object(o.a)(n,e),n.prototype.render=function(){var e=this.props,n=e.components,t=Object(a.a)(e,p);return s.a.createElement(i.MDXTag,{name:"wrapper",Layout:this.layout,layoutProps:Object.assign({},u,t),components:n},s.a.createElement(i.MDXTag,{name:"h1",components:n},"Invalidating unused Firebase push tokens using scheduled functions"),s.a.createElement(i.MDXTag,{name:"p",components:n},"Push messaging in modern mobile apps with Firebase is really common. The usual workflow is:"),s.a.createElement(i.MDXTag,{name:"ul",components:n},s.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},s.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},"Integrating Firebase push SDKs / Cocoapods / SPM packages within the app.")),s.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},s.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},"Registering a project on the Firebase console.")),s.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},s.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},"On native apps, configuring the Firebase libraries, requesting for notification permissions, obtaining push tokens and saving them to a backend service."))),s.a.createElement(i.MDXTag,{name:"h1",components:n},"Firebase functions to send push notifications"),s.a.createElement(i.MDXTag,{name:"p",components:n},"I recently wrote a serverless backend for one of my apps - one of the first things to setup was sending Push notifications to all my app users."),s.a.createElement(i.MDXTag,{name:"p",components:n},"Firebase functions makes this a bit of a walk in the park."),s.a.createElement(i.MDXTag,{name:"p",components:n},"Using the ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"node.js")," ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"FirebaseAdmin")," SDK, running something like ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"sendToDevice(...)")," which does a multicast notification. More information can be found ",s.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://firebase.google.com/docs/cloud-messaging/send-message#send-messages-to-multiple-devices"}},"here"),"."),s.a.createElement(i.MDXTag,{name:"p",components:n},"For example:"),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"//initialise Firebase Admin SDK.\nconst admin = require('firebase-admin');\nadmin.initializeApp();\n\n//optional - if your firebase push tokens live in Firestore.\nconst db = admin.firestore();\n\n\n//get tokens from Firestore.\nconst allTokens = await db.collection('tokens').get();\n\n//run the sendToDevice call\nadmin.messaging().sendToDevice(allTokens, message, options)\n            .then((response) => {\n                console.log(\"response is \", response);\n            });\n")),s.a.createElement(i.MDXTag,{name:"h1",components:n},"Obtaining push tokens to persist in Firebase."),s.a.createElement(i.MDXTag,{name:"p",components:n},"Again, Firebase functions to the rescue! Firebase functions support ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"HTTP")," requests. More on this ",s.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://firebase.google.com/docs/functions/http-events"}},"here"),"."),s.a.createElement(i.MDXTag,{name:"p",components:n},"Here's an example again. Suppose we want the app to call a ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"POST")," request on startup that sends through the push token generated by the Firebase SDK on Android or iOS:"),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"exports.addPushTokenV2 = functions.https.onRequest(async (req, res) => {\n    const token = req.body.data.token;\n\n    if (!token) {\n        return res.status(401);\n    } else {\n        //persist token to database or Firestore here.\n        //return success\n        return res.json({ result: `token with token: ${token} added` });\n    }\n});\n")),s.a.createElement(i.MDXTag,{name:"h1",components:n},"Invalidating push tokens when no longer required."),s.a.createElement(i.MDXTag,{name:"p",components:n},"A lot of apps obtain push tokens at login (an optimal way of doing this is by requesting the current token from Firebase's local cache). Apps that support multiple users / login, usually also invalidate tokens on logout.\nBut what if the user never logs out, but removes / uninstall the app? ü§î"),s.a.createElement(i.MDXTag,{name:"p",components:n},"The best way to invalidate these tokens, unfortunately is by looking for errors when a push message is sent outbound, like so:"),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"admin.messaging().sendToDevice(tokens, message, options)\n    .then((response) => {\n        console.log('Successfully sent message:', response);\n    }).catch((error) => {\n        if (error.code === 'messaging/invalid-registration-token' ||\n            error.code === 'messaging/registration-token-not-registered') {\n            //a promise here to delete the token which can be pushed to an array,\n            //then return promise.all üëç\n        }\n    });\n")),s.a.createElement(i.MDXTag,{name:"p",components:n},"This is however problematic in apps"),s.a.createElement(i.MDXTag,{name:"ul",components:n},s.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Don't want to send out bulk outbound notifications or"),s.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Only support async notifications ie. notifications that go out when the\nuser performs an action.")),s.a.createElement(i.MDXTag,{name:"p",components:n},"There's a better way. On closely inspecting the way Firebase functions sends out push notifications, I realised there is a"),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"sendToDevice(registrationToken: string | string[], payload: MessagingPayload, options?: MessagingOptions): Promise<MessagingDevicesResponse>;\n")),s.a.createElement(i.MDXTag,{name:"p",components:n},"Here, ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"MessagingOptions")," has a ",s.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dryRun?: boolean")," variable, when set to true, it won't actually send the push message but rather do a dry run."),s.a.createElement(i.MDXTag,{name:"p",components:n},"Essentially, how we can create a ",s.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://firebase.google.com/docs/functions/schedule-functions"}},"scheduled")," Firebase function that"),s.a.createElement(i.MDXTag,{name:"p",components:n},"a) Polls for all push tokens"),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"for (const [key, value] of tokens.entries()) {\n        allTokens.push(key);\n}\n")),s.a.createElement(i.MDXTag,{name:"p",components:n},"b) Sets dry run to true."),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"const options = {\n  dryRun: true,\n};\n")),s.a.createElement(i.MDXTag,{name:"p",components:n},"c) Finally, send out push notifications, poll for errors and remove invalid tokens:"),s.a.createElement(i.MDXTag,{name:"pre",components:n},s.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"admin\n  .messaging()\n  .sendToDevice(allTokens, message, options)\n  .then((response) => {\n    response.results.forEach((deviceResult, index) => {\n      if (deviceResult.error) {\n        let failedToken = allTokens[index];\n        //push a promise to remove token from db.\n      }\n    });\n  });\nreturn Promise.all(tokensToRemove);\n")),s.a.createElement(i.MDXTag,{name:"p",components:n},"d) If you inspect the logs for your Firebase function"),s.a.createElement("img",{src:l.a,width:"50%"}),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("p",{align:"center"},s.a.createElement("h1",null,"It just works! "),s.a.createElement("img",{src:"https://media.giphy.com/media/3oEjI5VtIhHvK37WYo/giphy.gif"})))},n}(s.a.Component);d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-blog-2022-03-17-firebase-remove-unused-push-tokens-mdx-3d1bc1e8ba7ffb985d0a.js.map