{"version":3,"sources":["webpack:///./src/pages/2017-01-21-Programmatic-button-generation.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","className","href","smooth","duration","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"iPAOaA,EAAe,CAC1B,KAAQ,4CACR,MAAS,kDACT,KAAQ,yBACR,WAAc,QAEVC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAKC,UAAU,YACf,iBAAGC,KAAM,QAASC,QAAM,EAACC,SAAU,KAClC,SAGD,mBAAKH,UAAU,YACb,yEACA,4TACA,0LACA,sBACE,kBAAII,WAAW,MACb,iBAAGA,WAAW,MAAd,yIAA6J,iBAAGA,WAAW,IACvK,KAAQ,6DADiJ,UAA7J,MAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+KAGJ,gDACA,uBAAK,oBAAMA,WAAW,OAAjB,ocAWL,8PAA6O,0BAAYA,WAAW,KAAvB,iBAA7O,cAMNR,EAAWS,gBAAiB,G,kCC3Db,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-pages-2017-01-21-programmatic-button-generation-mdx-66cb9cf9e66d87876973.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"slug\": \"2017-01-21-Programmatic-button-generation\",\n  \"title\": \"Programmatically generating a button in Android\",\n  \"date\": \"2017-01-03 20:58 +1100\",\n  \"categories\": \"post\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"blogpage\">\n    <a href={\"/blog\"} smooth duration={1000}>\n    {\"Back\"}\n    </a>\n    </div>\n    <div className=\"blogText\">\n      <h1>{`Programmatically generating a button in Android`}</h1>\n      <p>{`Sometimes your android app needs to forego of xml layouts and programmatically generate views instead. This particular example will deal with generating a simple button. Short post because I am tired and I just want to make sure that this is preserved somewhere for me to come back to later.`}</p>\n      <p>{`But, first lets just talk about this really quickly. Why would we need to do this? There's at least a couple of scenarios where this would be required, actually.`}</p>\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`You want to create a template Button class that you can then provide to all your activities. Or several Button classes with different `}<a parentName=\"p\" {...{\n              \"href\": \"https://developer.android.com/guide/topics/ui/themes.html\"\n            }}>{`Themes`}</a>{`.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Or, you're trying to provide Buttons from an API from a web-based backend server. Attributes are being sent through and you need to generate Views from these attributes.`}</p>\n        </li>\n      </ul>\n      <p>{`Anyway here's the code:`}</p>\n      <pre><code parentName=\"pre\" {...{}}>{`//Generally define a method that returns a Button object.\n    private Button addButton(Context context, String label, String tag) {\n    Button button = new Button(context);\n    button.setWidth(getPx(320, context.getResources()));\n    button.setHeight(getPx(50, context.getResources()));\n    button.setText(label);\n    button.setTag(tag);\n    button.setOnClickListener(this); //this refers to the calling activity.\n    return button;\n  }\n`}</code></pre>\n      <p>{`You will need a ViewGroup object obviously that will need add this as a child View. To be able to detect when this Button is clicked, we check for the tag from the View Object passed to the onClickListener callback by calling the `}<inlineCode parentName=\"p\">{`View.getTag()`}</inlineCode>{` method.`}</p>\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}