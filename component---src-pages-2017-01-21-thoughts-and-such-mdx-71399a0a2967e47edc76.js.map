{"version":3,"sources":["webpack:///./src/pages/2017-01-21-Thoughts-and-such.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","className","href","smooth","duration","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"iPAOaA,EAAe,CAC1B,KAAQ,+BACR,MAAS,qBACT,KAAQ,yBACR,WAAc,QAEVC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAKC,UAAU,YACf,iBAAGC,KAAM,QAASC,QAAM,EAACC,SAAU,KAClC,SAGD,mBAAKH,UAAU,YACb,4CACA,uBACA,uBACA,+KACA,kjBAAiiB,iBAAGI,WAAW,IAC3iB,KAAQ,+CADqhB,uBAAjiB,KAGA,4FAA2E,iBAAGA,WAAW,IACrF,KAAQ,sCAD+D,UAA3E,qOAGA,mGACA,uBAAK,oBAAMA,WAAW,OAAjB,ofAYL,iMAMNR,EAAWS,gBAAiB,G,kCCzDb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-pages-2017-01-21-thoughts-and-such-mdx-71399a0a2967e47edc76.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"slug\": \"2017-01-21-Thoughts-and-such\",\n  \"title\": \"Thoughts and such.\",\n  \"date\": \"2017-02-20 21:30 +1100\",\n  \"categories\": \"blog\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"blogpage\">\n    <a href={\"/blog\"} smooth duration={1000}>\n    {\"Back\"}\n    </a>\n    </div>\n    <div className=\"blogText\">\n      <h1>{`Thoughts and such.`}</h1>\n      <br />\n      <br />\n      <p>{`I have certainly been quiet on here between trying to learn iOS and Swift Development, as well as developing a new app. Also work's been quite hectic.`}</p>\n      <p>{`A lot of the work I have done recently has involved getting information and then generating views/interactions from the data retrieved. I have to say, whilst I was initially skeptical (and completely unware) of the Graph API, the fact that you can query a single end-point for different queries and data-sets is awesome. Why? Because it makes the HTTP client's implementation spectacularly simplistic. Also, API calls are certainly less wasteful as you only really query for a dataset you require. An excellent introduction is the one to `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=WteK95AppF4\"\n        }}>{`Facebook's GraphAPI`}</a>{`.`}</p>\n      <p>{`Moving on - an excellent library I have come across lately has been `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/wasabeef/Blurry\"\n        }}>{`Blurry`}</a>{`. As the name suggests, it simply provides a way to create a blur effect in Android. Why would someone need this? Well blurriness can be used in the background to focus on certain things in the foreground so it can stand out.`}</p>\n      <p>{`To use the library, one can simply pass in the calling Activity's context:`}</p>\n      <pre><code parentName=\"pre\" {...{}}>{`  //Of course this doesn't always need to be called from an Activity, as long as\n  //the context Object or even the Activity Object can be passed around.\n  //In this instance the Activity object is used.\n\n  //A handy way of getting the contextView is by calling:\n  View backgroundView = this.findViewById(android.R.id.content);\n  //Now, just call Blurry like so.\n  Blurry.with(this).radius(25).sampling(2).onto(backgroundView);\n\n  //To remove Blurry:\n  Blurry.delete(backgroundView);\n`}</code></pre>\n      <p>{`I assume this library (and I haven't looked at the code) - all it does is take a screenshot of the content view and then adds it as an View in the layout's hierarchy.`}</p>\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}